name: CI

on:
  push:
    branches:
      - main
      - series/*
  pull_request:
  schedule:
    - cron: '0 12 * * *'

jobs:
  test:
    permissions:
      # Needed to access the workflow's OIDC identity.
      id-token: write
    strategy:
      matrix:
        conf:
#          - { py: "3.9", os: "ubuntu-latest" }
#          - { py: "3.10", os: "ubuntu-latest" }
#          - { py: "3.11", os: "ubuntu-latest" }
#          - { py: "3.12", os: "ubuntu-latest" }
#          - { py: "3.13", os: "ubuntu-latest" }
          # NOTE: We only test Windows and macOS on the latest Python;
          # these primarily exist to ensure that we don't accidentally
          # introduce Linux-isms into the development tooling.
          - { py: "3.13", os: "windows-latest" }
          # - { py: "3.13", os: "macos-latest" }
    runs-on: ${{ matrix.conf.os }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ matrix.conf.py }}
          allow-prereleases: true
          cache: "pip"
          cache-dependency-path: pyproject.toml

      - name: Install OpenSSL (Windows-only)
        if: matrix.conf.os == 'windows-latest'
        uses: dawidd6/action-download-artifact@bf251b5aa9c2f7eeb574a96ee720e24f801b7c11 # v6
        with:
          repo: pyca/infra
          workflow: build-windows-openssl.yml
          branch: main
          workflow_conclusion: success
          name: "openssl-win64"
          path: "C:/openssl-win64/"
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure (Windows-only)
        if: matrix.conf.os == 'windows-latest'
        shell: bash
        run: |
          echo "OPENSSL_DIR=C:/openssl-win64" >> $GITHUB_ENV
          echo "OPENSSL_NO_VENDOR=1" >> $GITHUB_ENV

      - name: deps
        run: make dev SIGSTORE_EXTRA=test

      - name: test (offline)
        if: matrix.conf.os == 'ubuntu-latest'
        run: |
          # We use `unshare` to "un-share" the default networking namespace,
          # in effect running the tests as if the host is offline.
          # This in turn effectively exercises the correctness of our
          # "online-only" test markers, since any test that's online
          # but not marked as such will fail.
          # We also explicitly exclude the intergration tests, since these are
          # always online.
          unshare --map-root-user --net make test T="test/unit" TEST_ARGS="--skip-online -vv --showlocals"

      - name: test
        run: make test TEST_ARGS="-vv --showlocals"

      - name: test (interactive)
        if: (github.event_name != 'pull_request') || !github.event.pull_request.head.repo.fork
        run: make test-interactive TEST_ARGS="-vv --showlocals"

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}